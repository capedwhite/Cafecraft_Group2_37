/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import java.util.List;
import model.Orderentry;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author ASUS
 */
public class Receiptpage extends javax.swing.JDialog {
private List<Orderentry> orderList;
    /**
     * Creates new form Receiptpage
     * @param parent
     * @param modal
     * @param orderList
     */
    public Receiptpage(java.awt.Frame parent, boolean modal,List<Orderentry> orderList) {
        this.orderList=orderList;
        super(parent, modal);
        initComponents();
        generateReceipt(orderList);
        this.setSize(400,400);
        this.setResizable(false);
        this.setLocationRelativeTo(null);

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ReceiptText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jLabel1.setText("CafeCraft Receipt");

        ReceiptText.setEditable(false);
        ReceiptText.setColumns(20);
        ReceiptText.setRows(5);
        jScrollPane1.setViewportView(ReceiptText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(113, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea ReceiptText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

private void generateReceipt(List<Orderentry> orderList) {
            LocalDate date = LocalDate.now();
String formattedDate = date.format(DateTimeFormatter.ofPattern("dd-MM-yyyy"));
        StringBuilder receipt = new StringBuilder();
        double total = 0;
        receipt.append("Date: ").append(formattedDate).append("\n");
        receipt.append(String.format("%-20s %-10s %-10s\n", "Item", "Qty", "Price"));
        receipt.append("=".repeat(45)).append("\n");

        for (Orderentry entry : orderList) {
            String itemName = entry.getProductName();
            int qty = entry.getQty();
            double price = entry.getUnitPrice();
            double itemTotal = qty * price;
            total += itemTotal;

            receipt.append(String.format("%-20s %-10d ₹%.2f\n", itemName, qty, itemTotal));
        }

        receipt.append("=".repeat(45)).append("\n");
        receipt.append(String.format("%-30s ₹%.2f", "Total:", total));

        ReceiptText.setText(receipt.toString());
    }
}
